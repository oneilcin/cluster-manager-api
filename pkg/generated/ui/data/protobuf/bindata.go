// Code generated by go-bindata. DO NOT EDIT. @generated
// sources:
// api/api.proto
package protobuf

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiProto = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7c\xeb\x73\xdb\xb6\xb2\xf8\x77\xff\x15\x3b\xfe\xf2\x93\x7f\x63\x4b\xb1\x93\xb4\x39\xce\xc9\xed\xd1\x91\xdd\x44\x93\xc4\xf6\x58\x4e\x32\xfd\xa4\x81\xc8\x15\x85\x63\x12\x60\x01\x50\x8a\xda\xc9\xff\x7e\x07\x2f\x12\x7c\xc9\x8f\x38\xb7\x73\x3b\xd7\x33\x6d\x45\x62\xb1\x00\xf6\xbd\x8b\x65\x47\x23\x98\xf0\x7c\x2b\x68\xb2\x52\x70\xf2\xec\xf8\x15\xcc\x48\x26\x0b\x96\xc0\xec\x6c\x06\x93\x94\x17\x31\x5c\x10\x45\xd7\x08\x13\x9e\xe5\x85\xa2\x2c\x81\x1b\x24\x19\x90\x42\xad\xb8\x90\xc3\xbd\xd1\x68\x6f\x34\x82\x0f\x34\x42\x26\x31\x86\x82\xc5\x28\x40\xad\x10\xc6\x39\x89\x56\xe8\x47\x0e\xe1\x33\x0a\x49\x39\x83\x93\xe1\x33\x18\x68\x80\x7d\x37\xb4\x7f\xf0\x5a\xa3\xd8\xf2\x02\x32\xb2\x05\xc6\x15\x14\x12\x41\xad\xa8\x84\x25\x4d\x11\xf0\x6b\x84\xb9\x02\xca\x20\xe2\x59\x9e\x52\xc2\x22\x84\x0d\x55\x2b\xb3\x8e\xc3\xa2\x77\x02\xbf\x39\x1c\x7c\xa1\x08\x65\x40\x20\xe2\xf9\x16\xf8\x32\x04\x04\xa2\xdc\xa6\xf5\xdf\x4a\xa9\xfc\x74\x34\xda\x6c\x36\x43\x62\x36\x3c\xe4\x22\x19\xa5\x16\x54\x8e\x3e\x4c\x27\xe7\x17\xb3\xf3\xa3\x93\xe1\x33\x37\xe9\x13\x4b\x51\x4a\x10\xf8\x7b\x41\x05\xc6\xb0\xd8\x02\xc9\xf3\x94\x46\x64\x91\x22\xa4\x64\x03\x5c\x00\x49\x04\x62\x0c\x8a\xeb\x4d\x6f\x04\xd5\x74\x3b\x04\xc9\x97\x6a\x43\x04\x6a\x34\x31\x95\x4a\xd0\x45\xa1\x6a\x34\xf3\x5b\xa4\xb2\x06\xc0\x19\x10\x06\xfb\xe3\x19\x4c\x67\xfb\xf0\xef\xf1\x6c\x3a\x3b\xd4\x48\xbe\x4c\x6f\xde\x5d\x7e\xba\x81\x2f\xe3\xeb\xeb\xf1\xc5\xcd\xf4\x7c\x06\x97\xd7\x30\xb9\xbc\x38\x9b\xde\x4c\x2f\x2f\x66\x70\xf9\x2b\x8c\x2f\x7e\x83\xf7\xd3\x8b\xb3\x43\x40\xaa\x56\x28\x00\xbf\xe6\x42\x9f\x80\x0b\xa0\x9a\x9a\x18\x1b\xd2\xcd\x10\x6b\x5b\x58\x72\xbb\x25\x99\x63\x44\x97\x34\x82\x94\xb0\xa4\x20\x09\x42\xc2\xd7\x28\x98\x96\x84\x1c\x45\x46\xa5\xe6\xaa\x04\xc2\x62\x8d\x26\xa5\x19\x55\x44\x99\x57\xad\x73\x0d\xf7\x34\xc8\x47\x1a\xad\x08\xa6\xf0\x19\x19\xfe\x41\x09\xfc\x33\x5b\xdb\x5f\xff\x4a\x32\x42\xd3\x61\xc4\xb3\xff\xd2\x70\xe3\x94\xde\x12\xf8\x40\x84\x44\x06\xff\x24\xfa\x69\x98\x9a\xa7\x10\x70\x4f\x6e\x99\x22\x5f\xe1\x0d\xec\xe7\x82\x2b\xfe\x7c\xff\xf5\xde\x5e\x4e\xa2\x5b\xbd\xd5\x28\x2d\xa4\x42\x31\xcf\x08\x23\x09\x8a\x39\xc9\xe9\xeb\xbd\x3d\x9a\xe5\x5c\x28\xd8\x4f\x38\x4f\x52\x1c\x91\x9c\x8e\x08\x63\xdc\x6d\x7b\x68\xd0\xec\xbf\x2e\xc1\xcc\x73\x74\x94\x20\x3b\x92\x1b\x92\x24\x28\x46\x3c\x37\xa0\x9d\xd3\xf6\xf6\xec\x28\x0c\x12\x91\x47\xc3\x84\x28\xdc\x90\xad\x1d\x8e\xe6\x09\xb2\xb9\xc3\x32\x74\x58\x86\x3c\x47\x46\x72\xba\x3e\xf1\x23\x07\xf0\x06\xfe\xdc\x03\xa0\x6c\xc9\x4f\xcd\x2f\x00\x45\x55\x8a\xa7\xb0\x3f\xb1\x47\x82\x8f\xf6\x48\x30\xbe\x9a\xee\xbf\x36\x10\x6b\xab\x60\xa7\xb0\xbf\x7e\x36\x3c\x19\x3e\x73\xaf\x23\xce\x14\x89\x94\xc7\xa3\xff\x18\xc9\x34\x2a\xaf\xeb\x93\x8b\xc9\x8d\x03\xd6\x7f\x85\x48\x4f\x61\x5f\x2b\x86\x3c\x1d\x8d\x12\xaa\x56\xc5\x42\xd3\x7a\x24\x2d\xfc\x51\xc4\x22\x35\x72\xa4\x3d\x72\xa4\x3d\x22\x39\x0d\x70\xa0\x66\xd0\x29\xec\x93\x38\xa3\xec\x5f\xe1\xc4\x21\xe5\x0e\xee\x9b\xfe\x8f\xf9\x17\x7e\x55\x28\x18\x49\xe7\x31\x8f\xa4\xdf\xe8\xf7\x6e\x23\x46\x19\x09\x6a\x48\x7c\x0a\xfb\x1f\xb9\x40\x20\x0b\x5e\x28\xe8\xa3\xe0\xb7\x3d\x00\x19\xad\x30\x43\x79\x0a\xef\x6e\x6e\xae\x66\xaf\x9b\x6f\xf4\x8b\x88\x33\x59\x98\x37\xfb\x4e\xf1\xf5\x12\xa3\xff\x48\xce\x0c\x9a\x5c\xf0\xb8\x88\xfa\xc6\xbf\xbd\xde\xdb\x93\x28\xd6\x34\xc2\x72\x23\xf6\xbc\x5a\x9f\x69\x9a\xea\xf9\x6b\x6a\x2c\x25\xf1\xf2\x6b\xc6\x45\x1e\xc1\x44\x20\x51\xe8\xe7\x0d\x6a\x8f\x1f\x65\x72\x00\x02\x55\x21\x98\x6c\x0c\x5d\x63\x9e\x6e\x0f\x02\x01\x28\x25\xd4\x68\xc0\x90\xe4\x74\xa8\x09\xed\xe5\xae\xfa\xcb\xb9\x54\x70\x0a\xfb\x46\x49\xd6\xc7\x9e\xdc\xfb\x35\xa0\x05\x8f\xb7\x1a\xe8\xff\x57\xaf\xbf\x39\x16\xd7\x4e\x26\x50\x09\x8a\x6b\x6b\x67\xa4\x22\xaa\x90\xda\x36\x97\xc7\xd4\x36\x04\xa8\x92\x70\x5b\x2c\x30\xe2\x6c\x49\x13\x63\x86\x22\xce\x18\x46\x8a\xae\xa9\xda\x96\xa4\x78\x8b\xaa\xa4\x43\xf5\xbb\x4e\x84\xea\xfd\xe3\x29\x90\xe0\x6e\x02\x74\x9e\x34\xc6\x14\x15\x76\x30\xf0\xcc\x0c\x94\x1b\xaf\x3d\xd6\xf7\x5e\x1b\x7a\xfc\xf6\xdd\x4e\x1e\x7c\x02\x12\xff\xa7\x90\x0a\xc8\x4e\x71\x1c\x1b\x20\xb7\xc7\x0b\x1e\xa3\x84\x41\xed\x5d\xfd\x48\xb5\xa1\xef\x90\xc9\xe2\x07\x88\x24\x81\x94\x4a\xa5\xc5\xd1\xe1\x93\x1d\x92\xf6\x41\x83\x0c\xea\xcf\x7d\x12\xa7\xc7\x9e\x5a\xea\x46\x7a\x8f\x77\x9c\x88\x32\xa9\x48\x9a\xc2\x80\x0b\x10\xe8\x9e\x0e\x40\xd1\x34\x0d\x38\x77\xe5\xb9\x7a\x63\xde\xc3\xa0\xf1\xa2\x7e\xaa\xc6\xe0\xd3\x99\x13\xbb\xab\xc7\xb1\xae\xe7\xa0\x2b\x4c\x33\x88\x56\x44\x28\x0f\x7d\xa3\x03\xc9\x8d\x9e\xb2\x40\xed\x15\x94\x28\x22\x13\xd2\x52\x63\x7b\x34\x28\xac\x88\x04\x92\x0a\x24\xf1\x16\x16\x88\x0c\x62\xcc\x53\xbe\xc5\xb8\x8a\x33\x25\xc9\xd0\x78\xce\x92\x88\x53\xbb\xe6\x3b\x4c\xb3\x89\xc1\x32\x68\xbe\xa9\x93\xb1\x39\xfa\x74\x74\xd4\x87\x7e\x1c\x15\x9d\x7d\x28\x8f\xdb\x20\x5f\x65\xb3\x82\x53\x36\x5e\x74\xd9\xad\x27\x38\x63\xdb\x72\xd5\x4f\xd9\xa7\xcf\x85\x60\x3e\x14\x32\x01\x94\xc8\x8c\x03\x76\xce\x9f\xe4\x14\xb4\xff\x0d\x74\xe1\x2d\x2a\x97\x9b\x4c\x03\xf0\x41\xf5\xba\xa5\xe2\xee\xfd\x93\xa9\xb7\xdb\xee\xfd\xce\x56\xe4\x89\x20\x31\xba\xc5\xa4\xf1\x90\x04\x12\xba\x46\xd6\x32\xd0\x6f\x51\x7d\xb2\xe0\xce\x2a\x35\x4f\xd8\x3b\xda\x3a\x73\x2f\xe4\x93\x1b\x39\x77\xc0\xbb\x1c\x94\x52\x98\xe5\x4a\xe7\x58\x9e\x22\x6d\x07\x55\xdf\x34\x0c\xea\xcf\xf5\x33\xd6\xc7\x9e\xda\x3d\xb5\x4f\xf5\x10\x2d\x2d\xf2\x98\xe8\x78\x62\x23\x21\x12\x18\x23\x53\x94\xa4\x52\xa7\xc9\xb1\xe3\x7f\xfb\xe4\x7a\xc6\xf8\xcb\x6c\x12\xc0\x0f\xba\xde\x36\xa9\xd0\x86\x78\x3a\x5a\x54\x38\x47\x64\x23\xbf\x8f\x16\x7f\x14\x02\x1f\x48\x0d\x3d\xa5\x8b\x1e\x8d\xf7\x9d\x14\x69\xc0\xfc\x18\x9a\xe8\x45\xee\x4f\x95\x6f\x7b\x7b\xc8\x8a\xcc\x3a\xf3\xb8\x4c\x24\x74\xda\xbd\xa4\x0c\x63\x78\x03\xcf\x2c\xac\x16\x9c\x37\x70\xec\x1e\x0c\xe5\xde\xc0\x89\x4b\x1b\xb3\x0d\x31\xcf\xcf\xed\xb3\x94\x2b\x78\x03\x2f\x5e\x97\xe8\x9d\x46\xcc\x6c\xc0\x5e\x26\x2b\x17\x5c\x81\x44\xeb\x26\x66\x37\xe3\x9b\x4f\xb3\xf9\xa7\x8b\xd9\xd5\xf9\x64\xfa\xeb\xf4\xfc\xac\x5a\xdb\x78\x60\x84\xab\xeb\xcb\xcf\xd3\xd9\xf4\xf2\x62\x7a\xf1\xd6\x04\xff\x08\x94\xc5\x3a\x3b\x42\x69\xfc\xab\x4f\x02\xa8\x84\x05\x52\x96\x68\xde\x12\x85\xf1\xd0\x60\xa9\x4d\x2f\x8f\xe2\x70\x5f\x7f\xba\xb8\x13\xad\xf6\xf0\xc6\xb3\x3b\xb4\x36\xd9\x90\xb0\x2c\xd2\x74\x0b\x85\x24\x8b\x14\xed\x52\x1e\x5b\x49\x21\xbf\xca\xf9\xe4\xf2\x62\x32\xfd\xd0\xbd\x12\x51\x20\x79\x86\xb0\xe1\xe2\x56\xe3\x25\x26\xc6\x48\xb7\xee\x30\x31\x67\x08\x9c\x85\x5b\x3a\x04\x59\x44\x2b\x20\xd2\x19\x30\x0d\xa6\x87\x33\x62\x36\xcc\x05\x30\x1e\x63\x59\x35\x72\x9b\x0b\x36\x51\xb2\xcc\x6d\x70\x76\x73\x79\x75\x75\x6f\xf2\x5a\xff\x1a\x3b\xfe\xb9\x99\x86\xf1\x01\xca\xf3\xeb\xeb\xcb\xeb\x9d\xf8\x32\xa2\x8f\x08\x05\xb3\x24\x34\x93\xed\xac\x37\xf0\xb2\x86\xeb\xec\xfc\xed\xf5\xf8\xec\xfc\x6c\x27\x3a\x57\x57\x33\xda\x2c\x0c\x11\x35\xd1\x38\x08\x94\x4a\xa7\xf0\x9a\x5d\xb0\x2c\x98\x19\x20\xa9\xcf\x08\x4b\xdc\x6f\xe0\xa7\x4a\x72\xdf\x17\x0b\x14\x0c\x15\xca\x1b\x42\x99\x3a\x5f\x2e\x31\x52\x95\x04\x9f\x71\x53\x6c\x24\x69\xca\x37\xc0\x70\x03\x39\x8f\xa5\x5e\x4c\xe7\xfc\x71\x91\x6a\x86\x29\x6e\xb6\x67\x38\x51\xd8\xd2\x9f\x5a\xe1\x16\x14\x4f\x51\xe8\x63\xe8\x51\xa5\xb1\x5b\xfe\x5c\xf0\x99\x9f\x1c\x6a\xc0\xb8\xf2\x56\x7a\xc9\x72\x81\x72\xd5\xce\x95\x18\x07\x6e\x6a\x76\xe6\xa5\x8e\x44\x75\x08\x63\x56\x33\x22\xb6\x26\x34\xad\xe4\xf6\x4a\xe0\x52\xa7\x61\xc1\x06\x2a\x35\x39\x5f\xd3\x48\x01\x61\x5b\x1f\xe6\x1e\x89\x82\xd9\x22\x9e\x39\xb4\x96\xdf\xd8\x6e\xae\xff\x68\xe7\x5f\x31\x2a\x94\xb3\x1d\xdf\xf6\xf6\x32\x94\x92\x24\x08\x13\x92\xa6\x0b\x12\xdd\x56\xa4\xd5\xfc\xfe\x74\xfd\x41\x9f\x37\xd2\x41\xba\x19\x55\xdc\x1a\x18\x25\xf4\xba\x85\x48\x5b\x8a\x3c\x3d\xf3\xc5\x5a\x2d\x07\x28\x55\x38\xc1\xbd\x9a\xd3\xb8\xbd\x81\x46\x21\x24\xb0\x52\x3a\x6a\x77\x38\xbd\x8c\x29\xae\x25\xb6\x4c\x6c\x9d\x0e\xb8\x55\x74\x84\xdf\xda\x57\xee\x2d\xac\xaf\x86\x9a\xc8\xc7\x40\xd4\x96\xf6\x96\x78\x96\x63\x54\x4d\x0a\x0d\x49\x49\xaa\x20\x34\xb5\x78\xfc\x40\xe4\x7f\x18\xf5\xee\x3b\xa4\xf1\x3f\x41\xe5\x68\x85\x46\x50\x8c\xd1\x50\xb5\xd3\x6e\x88\x0c\xcf\x0a\x8b\xad\x2d\xad\x87\x14\x5e\x70\x9e\x02\xbf\x6d\x9d\x3b\x46\x45\x68\x2a\x9b\x04\x74\x53\xb5\x52\xe6\x9c\x49\xab\xf4\x3e\x32\x54\x98\x95\x80\x4d\x3e\xd5\x0a\x35\xf7\x61\x52\xca\xf9\x2d\xc6\x50\xe4\x3b\x59\x34\xfe\x32\x83\xc0\x37\x9b\xd7\x8d\xd0\xc7\x7a\xc0\x8a\x0f\xc6\x9f\xb7\x27\x35\x23\x04\xef\x2b\x2b\x43\x1b\xee\xd5\x73\x58\xc2\x80\x6c\x9c\xfb\x1e\x59\x7f\x3a\x42\x15\x1d\x38\xb5\x74\x62\x10\xc8\xc3\x8b\x1e\xaa\x34\xb8\x3a\x6d\x98\x6e\xeb\x3e\xe4\x56\x2a\xcc\xda\x7c\x0b\xb9\x70\x66\x18\xb7\x93\x17\xcd\xda\x53\x28\x4c\xc4\xd8\x97\x60\xed\xff\x27\x2d\xd5\x15\xb7\x19\x34\xdf\xfe\xed\x18\xf2\x18\x05\x7d\xd9\x4f\xd1\x06\x2b\x27\xbc\x48\xe3\x1a\x37\x7d\x31\x42\xa7\xdd\xbd\x4a\x38\x2b\xab\xa4\x3d\x46\xd1\x95\x51\xfb\x15\xcd\xd5\xa8\xaa\x9d\xdc\x9b\x37\xc7\x8f\xe5\xcd\xc9\xff\x8c\xb2\x94\x15\xb6\xc7\x2a\x8c\x9b\xf4\xa1\xb3\xf0\x87\xb9\x0d\x13\x3b\xcc\x5a\x9b\xdc\x21\x50\xb5\x99\xb3\x86\x4d\x0b\xf9\x66\x9c\xd8\x71\x27\xa1\x3a\xa0\x9d\x82\x05\xda\x12\xc7\xd4\x46\x40\x1d\x35\x8e\x7a\x79\xbd\x07\xa5\x05\x98\xfb\x13\x34\x63\xc9\xfe\xf9\xf5\x74\xa0\x94\xbf\x17\x5d\x04\x09\xcc\xd0\xff\x7e\xb2\x84\x66\x31\xb8\xa1\xd0\x21\x8e\xbd\xa0\x00\x17\xc2\x75\xa0\x0d\xe0\x9b\x21\xf6\x83\x29\xfd\xb2\x73\x47\xe6\xa6\x0d\x16\x48\x84\x71\x9e\xb7\xc8\xc2\xf5\xed\x7b\xf3\xba\x0c\x91\x3b\xe3\x8a\x5a\x04\xd3\xe9\x11\x4a\xcd\x3c\x82\xa8\x10\x02\x99\x4a\x5d\x44\x41\xad\xe5\xe0\x3a\x29\x20\xf2\xce\xa0\xca\x17\xe9\xf8\x32\x08\xd4\x6b\x44\x7b\x25\xe7\x1e\xc8\x70\xd9\x0c\x72\x86\x7c\x59\xee\x62\x1e\xf2\xb9\x4a\xb4\xdd\x12\xda\xd6\xb5\x43\xb6\x56\xd8\x36\xfe\x32\x33\xe7\xb5\x76\xef\xf9\xeb\x1e\xa8\xf7\x0e\xca\x99\xb9\x17\x3d\x70\x9f\x3f\x7e\x21\x02\x0d\x68\x99\x5b\xff\xdc\x03\x3b\x93\x2b\x03\x68\x93\xee\x57\x3e\xb3\xbf\x47\x58\x47\x25\xbc\x1b\x57\x36\x6d\x45\x93\xd5\xdc\x25\x04\x54\xa7\x45\xad\xf4\x6b\x49\x16\x82\x46\x2e\xae\x2a\x64\x23\xea\x45\xa5\x13\xd7\xb9\x03\x32\x22\xd2\x2b\x23\x9e\x5c\xb5\x68\x5f\x93\xfa\x8c\x28\x02\x13\x64\x5e\x80\xc7\x5f\x66\xfa\x95\x7d\x03\x31\x51\x64\x1e\xd9\xdf\xa1\x2c\x84\x2e\x44\xef\xae\xa0\x75\x4f\xd9\xe5\xa1\xc2\xba\x4f\x68\x00\xfe\xfd\xdb\x25\x50\x85\x59\xe9\xd6\xae\x84\xd3\xbb\x42\x60\xac\x0d\x91\x0e\x7c\x25\x2f\x44\x84\xb2\xa6\xdd\xa6\x38\xcf\x22\x84\x44\xf0\x22\x6f\x38\x81\xf1\x97\x99\x1f\x7f\xab\x87\xed\xe5\x03\x8b\x70\x6e\xa1\xad\x34\x54\x5c\xa3\xd1\xaa\x45\x0c\x4f\xca\x3a\x51\x6a\x22\x6b\x27\x0a\x4c\x4c\x25\xa9\x90\x47\x48\xa4\x3a\x3a\x3e\x04\x54\xd1\xf0\xa0\x84\x2c\xf3\xa1\xc4\x6a\xc6\xf1\xeb\x36\x92\x9a\x28\xfc\xc1\x19\xca\x00\xe1\xe2\x10\xfc\xef\x93\xc8\xfc\xde\xa0\xfe\x1d\x37\x57\x2a\x09\xe0\x96\x0c\xb1\xce\x2d\xd6\x92\xfa\x95\xd4\xfe\xca\x05\x6c\x56\xc8\x6c\x41\x44\xad\x28\x4b\x24\x68\x3d\xf0\x37\x2c\xae\x04\xd3\x24\x4b\x07\xaf\x5a\x1a\xfd\xf9\x6a\x02\x34\x3e\x84\x45\x4a\xd8\xad\xa9\xf6\xe9\x7f\xf6\x2d\x46\x6d\x1b\xcc\xf3\x96\x17\xfb\x87\xb0\xa4\x69\x8a\x31\xd0\xa5\xe9\x2d\xd2\x1b\xd0\xe2\xf1\xf9\x6a\xd2\xa4\xe4\x3a\x8f\xe6\xa1\xe7\xf1\xc1\x17\x46\x85\xd0\xf4\x33\x4c\x6e\x4e\x92\x6e\xd4\x8a\x40\x99\x95\x36\xf6\x3b\x1d\x7f\x04\xc1\xd3\xaa\x9f\xc6\xeb\xef\x80\x08\x76\xe0\x15\x4a\x4a\x1e\x51\x63\xa0\xe2\xb8\xb9\x0e\x25\xd9\x5c\x63\x98\x13\xc1\x2a\x89\xad\xa8\xdd\x10\x5c\xb0\xc5\x3f\x20\xa0\xb6\x39\x9a\x2a\x17\x2b\xb2\x85\x36\x22\xcb\x52\x6c\x65\x93\xf4\x75\xe9\xae\x51\xbd\xc4\x6f\xf0\x0d\xb2\x97\xc3\x94\x88\x04\x7b\x84\xd2\x00\x35\x09\xf9\x91\x32\x9a\x15\x59\xd7\x46\x60\x10\xe3\x92\x14\xa9\x32\xba\xff\x07\x0a\x5e\xa1\xa4\x4c\x3d\x3f\x81\x8c\xb2\xf9\xef\x05\x61\xca\x1a\xb5\x3a\x89\x3f\x92\xaf\xdf\x81\x99\x7c\x0d\x31\x3f\x0f\xea\xaa\xa3\x91\x0e\x34\x43\x17\x35\xbe\x9a\xc2\xcc\x5e\x1c\x05\xa1\x68\x75\x43\x04\x7f\xba\x79\x36\x24\xd5\xec\xf6\xb3\x7d\xd8\xde\x9e\xd7\x0c\x5f\x97\xc0\x73\x14\xd6\x99\xe9\xbc\xfd\xf2\x7d\x4f\x9a\xe7\x51\x75\x5c\x5c\xb5\x54\x46\x91\xc4\x57\x1e\x13\xaa\x93\xf6\x9c\x4b\xaa\xb8\xd8\x36\x79\x97\x50\x15\xf8\xdb\xe3\x96\x2c\xaf\x88\x5c\xf9\x38\x45\x63\x8a\x78\x96\x51\xd5\x85\xc5\x8e\xb4\xb8\xd5\xe1\xce\x94\x40\x34\x47\x8d\x52\x24\xcc\x9a\x0d\xed\x01\x3a\xd1\x6a\xe0\xb9\xad\x1e\xd6\xdc\xf4\x68\xa4\xad\xad\x89\x14\x8d\xf7\x68\xce\x35\x2f\xe7\xb1\x9d\xf7\xa2\x36\xef\x73\xc5\xe1\x84\xdb\x2b\x04\x13\xd0\x65\x39\x75\xc5\xcc\x70\x0f\x3c\xa0\xcf\xcb\x1a\x9e\x89\x9d\x21\x2a\xcf\x1a\xcc\x8b\xfc\xa0\xf1\xab\xc1\xac\xab\x94\x28\xcd\x39\xa0\xca\x12\xc1\x02\xda\x6b\x8c\x11\xf8\x12\x5d\x10\xb7\x38\x8c\xb9\x9f\x58\x86\x16\x95\x41\xf0\x47\x9a\x36\x12\xd8\x0e\x59\x71\xa7\xa9\x05\x51\x3e\xb7\x71\x4c\x8f\xea\xde\xb9\x70\xad\x81\xc6\xe0\xfa\x8a\xb5\x77\xd4\x81\x41\x09\x9d\x75\x2d\x4e\x98\x61\x24\x50\xbd\xc7\xed\xd4\x9e\x52\xeb\xd5\x38\x8a\x50\xd6\x42\x3f\x69\xa0\xe6\xb7\xb8\x9d\x37\x52\x82\x0a\x87\x9d\xf5\x1e\xb7\x25\x1e\xd2\x87\xc7\x0e\x68\x74\xed\xaa\xbe\xf5\xa2\xfd\x28\x4a\x37\x6b\xab\x71\xdf\x45\x97\x66\xc6\x5c\x8f\xa0\xf2\x7c\x27\x4d\x48\x9e\x77\x11\xe3\x06\x19\x61\x6a\xc7\x01\x94\x05\x68\x1e\xfc\x8a\x48\xb9\xe1\x22\xde\x31\x33\xf7\x20\xad\x9b\x86\x62\x51\x36\xd7\xed\xa2\x7e\x00\x66\xb7\xfe\xc2\x8b\x96\x49\x59\xa2\x88\x17\x4c\x59\xad\x33\x65\xc9\x5a\xf9\xcf\xf9\x74\x1b\x6e\x57\x41\xdb\x00\xbf\x9e\x42\xca\x49\x0c\x0b\x92\x6a\x4b\x2f\x0e\x1a\x04\x76\xa1\xb5\xed\xb2\x1b\xbb\x45\x6a\xa4\x9e\xa4\x14\x99\x9a\xc6\x30\x20\xb7\xe4\xd4\x50\xfe\xec\x20\xdc\x79\x64\x00\xba\xc8\x6d\xa7\x5a\x09\x74\xd3\x3d\x99\xba\x30\x58\x01\xf4\x4a\xd5\x1d\x4e\xbf\xef\x0a\xa7\xcd\xa9\x9b\x31\xa4\xc3\x9d\xf2\xc8\xeb\xea\x43\xc3\xe8\xa6\x04\xf6\x05\xd2\xbb\xc3\xe1\xf7\x0f\x09\x87\x9f\x20\x40\x69\xae\xd7\xf2\x71\x2c\x28\x14\x74\x46\x6b\xf5\x0c\xb4\xb9\x33\x1b\xda\xcc\x14\x61\x31\x11\xf1\xfc\xec\x64\xbe\x3e\xd9\x1d\xe0\x9c\xfc\xb0\x00\xe7\xf9\x0f\x0b\x70\x5e\x04\x01\x4e\xa7\x24\x06\x99\x6b\x29\x8c\x1f\x49\xb4\xa2\x3a\xd0\xdf\x98\xbc\x42\x7b\x28\x41\x25\xb6\x24\xab\x14\x0e\x8b\xc4\x4d\x33\xb8\x22\xce\x94\xe0\xe9\x3c\x4f\x09\xc3\x39\x33\x7d\x82\xa1\x45\x79\x82\x25\x74\xf2\x8a\xa2\xc4\x1d\x56\x58\xa8\x04\xb9\x32\xd5\xd7\x85\x16\xba\x35\x49\x0b\x84\x94\xde\x22\xd0\xfc\xd4\x74\x78\x9b\xcb\x2f\xdf\x20\x46\x60\x4d\x85\x2a\x48\x0a\xd3\xab\x91\x1e\xf6\x98\xb4\xbd\xd4\x76\xca\xde\x64\x95\x3d\xcb\x10\x15\x52\xf1\x0c\x85\x74\xa9\xb5\xf9\x0e\xc0\xc6\x10\x59\xc1\xcc\x15\xe7\x8e\xc2\x10\xc9\xe9\x1c\x59\x9c\x73\x6a\x4c\xf4\xcb\xfe\xca\x8c\x2f\x15\x3c\x9e\x33\x33\xb9\xfa\xa1\x6c\x69\xe0\xff\x7b\xf2\xa4\x2a\x55\x7d\x20\x0b\x4c\xeb\x56\xdb\x9b\x21\x02\xa9\x1e\xbc\xbb\x04\x66\x0e\xde\x3d\xc1\x8e\x35\x2b\xcd\x8d\x2b\xed\xbe\xe5\xcd\xb5\xed\x43\x96\x6f\x4d\x08\x96\x0f\x66\xa0\xbd\x42\x6f\x4c\xe9\xbe\x67\x77\xb0\x3e\x70\xf2\xe5\xce\xb0\x1c\xe7\xda\x75\xca\x6f\x4c\xb4\xac\x94\x47\x6d\x6b\x79\xed\xb0\x85\xd4\xbc\xce\x6c\xd8\x35\x9b\xbd\xeb\x88\x3f\x4a\x90\xe6\xc1\x57\x5c\xaa\x1d\xf3\xcc\x70\xf3\xe8\x46\x2c\x3b\xe6\x58\x53\x6b\x46\x9b\x61\xd2\xed\x2b\x59\x26\x81\x65\xfe\x6f\xb5\x0e\x8c\xd6\x0d\xad\x2e\x98\xeb\x7d\x2a\x81\xb3\x74\x0b\xc4\x37\x80\xd0\xa5\xff\x06\x0a\x53\xd3\xaa\xe2\xda\x7a\x86\x3d\x21\x5a\xbd\xac\x6c\xe4\x49\x96\xcb\x66\x4e\x99\xeb\x1a\xdb\x14\x66\x37\xc9\xcb\xfc\x83\x59\xd6\xb0\x00\x4f\xc6\xaf\xef\x3e\x4c\x88\xcb\x5d\xf7\xdc\x96\xe0\x56\x92\x7b\xb1\x59\x45\xb3\x30\x55\x06\xa7\xb1\xe9\x50\x80\x2f\xfd\x76\xb4\x45\xa9\xba\xe5\x07\x32\x23\x69\x7a\x08\x19\xc6\xb4\xc8\x0e\x21\xc9\x8b\x43\x18\x0e\x87\xb5\x20\xd1\xfb\xf2\x1b\x1b\x54\xfc\x5c\x53\xf5\x76\x4b\x76\xf7\x8d\xb9\x6d\xa2\x86\x11\xf8\xaf\x9e\xdc\xb7\x30\x5d\xea\x5f\x75\xa4\xf8\x9e\x48\x37\xbb\x32\xc7\xae\x93\xda\x7c\x76\x56\x0f\x68\xfd\x3d\x72\xfd\x7e\x46\xe6\x24\xc2\x5d\x68\x28\x6b\xee\xc4\x4e\x09\x15\x8c\x66\x7a\xe3\x03\xba\x2c\x0b\x03\x2e\xb6\x39\xb0\x4c\x77\x5d\xea\xbf\x17\x64\x3b\xa4\x7c\x24\x79\x86\x49\xb1\x75\xfd\xe3\x75\x92\x66\xf6\xde\xe6\xb8\xda\x65\x90\xe3\xdb\x09\xa6\x93\xd8\x7e\x9d\x67\x7b\xc8\x47\x65\x0f\xa9\xe2\x30\x58\x9f\x0c\x8f\x8f\x87\xcf\x4c\x00\x58\xc3\x5d\x25\xff\x41\xdd\x58\x86\x4c\x28\x5b\x0f\x8f\x36\x34\xf6\x6f\x7f\xf1\xb0\x33\x4b\x1d\xaa\x60\x45\xd6\x58\x07\xb5\xf7\x37\xb9\xa0\x6b\x9a\x62\x82\xf2\x97\xaa\xf2\xe3\xbf\x62\x33\x70\xa1\x9e\x97\xe4\x77\x0d\x3c\x54\x85\x6e\xd5\xf9\x3c\x8b\xd8\xf1\xb2\x55\xd0\xd5\x83\x73\x56\xe1\x09\xb5\xe5\xde\x37\xc5\x3f\x3d\xf6\xa6\xf8\xe7\xa7\xbd\x29\x7e\xf5\xb8\x5b\xfc\x7f\xec\x52\xbb\x66\xa3\x0d\xb1\xfc\xae\xea\x74\xb2\x30\x76\x6c\x59\xa4\xed\x5a\x1d\x04\xd7\x67\x0e\xbf\x84\x0d\x0a\xb4\xfd\xda\xa1\x6c\x55\x37\x8e\x75\x87\xdf\xf1\x49\x41\xd0\x55\xf0\x14\x4a\x6c\x76\xd7\xc2\xd0\xbc\x21\x72\xc6\x65\x9e\x11\x96\x34\x7b\x9a\xcc\x67\x01\x33\x54\x8a\xb2\xc4\x72\xfc\x2d\x32\x14\x34\xaa\x3e\x1a\xb0\x9f\x59\x84\x8a\x73\x6f\xe9\x7a\xf1\x58\xe9\x7a\xf9\xb4\xd2\xf5\xd3\xe3\xa4\xeb\xe7\x9d\xec\xfc\xab\xc5\xab\xfd\x2d\xc7\x5f\x2d\x5d\xa4\x5b\xbc\x2e\xfc\x97\x37\x7e\xad\xbf\x93\x40\x8d\xa1\x60\xf4\xf7\x02\x81\xba\x8f\xc6\x63\x97\xa3\x34\x1b\xf5\xba\x5a\x21\x7f\x7e\x9c\x5c\xbe\xda\x25\x07\x7f\xb5\x58\xb6\xec\x47\x67\x2b\x42\x58\xf5\xb1\x5f\x30\x65\x78\x47\xda\xd3\x9c\xee\xa2\x17\xee\xe6\xdb\xba\x64\xf5\xd9\x6e\xa3\x67\xb5\x3b\x78\xa9\xf5\xcb\x99\xdd\x36\xee\x58\x3c\x49\xdd\x3b\x33\xdc\xdb\x5a\x62\x31\xb0\x1e\x71\x7f\xb1\x63\x8e\x0b\x4f\xba\x23\x96\x46\xd7\x08\x11\xe8\x38\x6a\xbf\x22\x1a\x30\x94\x3a\x2e\xd8\x92\x2c\x85\x23\x33\xf4\x59\x67\x80\x72\x68\xde\xe8\xac\x05\x99\x92\x07\xad\x14\xb1\x11\x12\x6b\x7d\x20\x5b\x53\x9e\xe5\xd5\xe7\x75\x03\x93\x34\x50\x91\x90\x3c\xd7\xc1\x07\x4f\x0b\xb3\x6c\x10\x62\x2d\xb6\x3a\x12\x37\xe0\x73\x8f\xc1\xc8\xb6\x19\x2d\x2b\x22\x0d\x4a\x36\xae\xcf\x2b\x8a\x7c\xba\xfe\x50\xa5\x5c\x25\x4f\x4a\xe8\xae\x1e\xe4\x0e\x2c\x86\x51\x25\x2b\xda\x72\x75\xd2\x51\x51\xbb\xe3\xab\xaa\xee\x18\xfe\xd1\x36\xe4\xaf\xe9\xb9\xec\xe8\x10\x75\x15\x1b\x34\x92\x15\x71\x26\xf5\x06\x35\xa9\x34\x17\x5c\x74\xdd\xa1\x99\xad\xe6\xbe\xdd\xdf\x99\x05\xce\x89\xb0\x66\x3b\xa5\x5b\xa5\xbf\x9b\xd2\x6c\xdb\xa9\x84\xed\x48\xc8\xb9\x94\x54\x07\xca\xf6\x7f\x81\xc2\xf8\xa6\x33\x4c\x2e\xe7\x34\xed\x54\xeb\x83\xb2\xff\x63\x6f\x93\xbd\x1d\xb4\x37\x48\x36\x18\x7e\xf7\xc2\x7f\xb9\xcb\x6c\x3d\xc8\xb9\xfd\xb4\x83\x4b\x9d\xbe\x8d\x4a\x20\x81\x53\xeb\xef\x8e\x0f\xd0\x36\x3f\x75\xdf\xd9\x41\xfd\x48\x02\x76\xf7\x42\x3e\x5a\x9e\x4e\x1e\x2e\x4f\x95\x58\x94\x08\xa3\x95\x4e\x02\xec\x9c\x46\x3b\x9e\x1b\x7a\x48\x2b\xde\x68\x54\x23\x64\xbd\x19\x2f\xb8\x65\xaf\x43\x35\x9a\xf1\x7e\xea\x81\xbb\xa3\x19\xaf\x06\x5b\x6f\xc6\xfb\x87\xb7\xed\x8f\x0c\xae\x6a\x7e\xab\x6f\x4f\x35\x32\x35\x0a\xee\x1b\x84\x0d\x61\xca\xe6\xf0\x71\x57\xbd\x1a\x76\x5f\x8a\x90\x38\x2e\xab\xef\x8d\x86\x9c\xde\x95\x04\x66\x7c\x8d\xb0\x14\x3c\xbb\xcf\x72\xd7\x06\x3c\x5c\xd4\x22\x28\xd7\xad\x37\x87\x75\x92\xa3\x7e\xb1\xf1\x24\xb4\x68\xd4\x21\x7f\x28\x21\x66\x72\xf5\x48\x2a\xf4\x91\xb0\xa5\x3b\x7d\xe5\x6a\x68\x95\xac\x8f\x3b\x17\xea\xdc\xe2\x9f\x0f\x42\xd1\xa9\x7c\xb5\x8d\xde\xeb\xfe\xb9\xd3\x01\xd5\xef\xa0\xeb\x0c\xba\xe0\x31\xc2\x95\x36\xc0\x17\x5d\x61\x18\x8f\x71\x9e\xeb\xd1\xe6\x8d\xac\xbd\x2e\x35\xb9\x54\x24\x90\x48\x84\x45\xd5\xef\x64\x4b\xf6\x5a\x2a\x6c\x6f\x40\xf3\xd2\x95\x95\xb3\x63\xec\x9b\xed\x38\xec\x11\x94\x77\xab\xbd\x0e\xe2\xc9\xdc\x4e\xcf\x47\xdc\xed\xbc\xbd\x99\x43\xb4\x5c\xca\x93\x74\xde\xde\xb1\xb3\xa7\x3e\x76\xfb\x5b\xed\x1f\x76\xf0\x3b\x7b\x25\xee\xdc\xdd\x77\x1f\xfe\xbf\x03\x00\x00\xff\xff\x97\x6c\xb2\x16\xa1\x4f\x00\x00")

func apiProtoBytes() ([]byte, error) {
	return bindataRead(
		_apiProto,
		"api.proto",
	)
}

func apiProto() (*asset, error) {
	bytes, err := apiProtoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api.proto", size: 20385, mode: os.FileMode(420), modTime: time.Unix(1558032319, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api.proto": apiProto,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"api.proto": &bintree{apiProto, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
